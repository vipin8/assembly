word is 2 bytes
long is 4 bytes


  nasm -f elf32 hello.asm -o hello.obj
  ld -m elf_i386 hello.obj -o hello
  echo $?


push ebp 
mov ebp, esp 
// when you move data to memory specify size like DWORD etc
// if moving to a register not required if it is default size of DWORD for 32 bit register
mov DWORD [ebp-4],10
mov DWORD [ebp-8],20
// push args in reverse order first b then a
push DWORD [ebp -8]
push DWORD [ebp -4]
call add 
mov DWORD [ebp -12] , eax ; return value is in eax move it to c 
move esp, ebp
pop ebp
ret

add:

push ebp
mov ebp, esp
sub esp,4
mov eax, [ebp+8]
add eax, [ebp+12]
mov[ebp-4], eax
mov eax,[ebp-4]
mov esp,ebp
pop ebp
ret
